
begin ;
create table if not exists image (
    id bigint generated by default as identity unique not null ,
    name varchar not null ,
    content_type varchar not null ,
    size bigint not null ,
    format varchar not null ,
    data bytea not null
);
commit ;

begin ;
create table if not exists authority (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique
);
commit ;

begin ;
create table if not exists identity (
    id bigint generated by default as identity unique not null ,
    username varchar not null unique ,
    password varchar not null ,
    email varchar not null unique ,
    phone varchar not null unique ,
    registered_at timestamp not null ,
    enabled boolean not null ,
    authority_id bigint references authority(id) on delete set null on update cascade ,
    image_id bigint references image(id) on delete set null on update cascade
);
commit ;

begin ;
create table if not exists country (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique ,
    description text not null
);
commit ;

begin ;
create table if not exists city (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique ,
    description text not null ,
    country_id bigint references country(id) on delete cascade on update cascade ,
    capital boolean not null
);
commit ;

begin ;
create table if not exists address (
    id bigint generated by default as identity unique not null ,
    city_id bigint references city(id) on delete set null on update cascade ,
    street varchar not null ,
    house varchar not null ,
    apartment varchar
);
commit ;

begin ;
create table if not exists status (
    id bigint generated by default as identity unique not null ,
    rating varchar not null unique
);
commit ;

begin ;
create table if not exists hotel (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique ,
    status_id bigint references status(id) on delete set null on update cascade ,
    description text not null ,
    image_id bigint references image(id) on delete set null on update cascade
);
commit ;

begin ;
create table if not exists filial (
    id bigint generated by default as identity unique not null ,
    hotel_id bigint references hotel(id) on delete cascade on update cascade ,
    address_id bigint unique references address(id) on delete set null on update cascade ,
    lux_rooms bigint check ( lux_rooms > 0 ) ,
    economy_rooms bigint check ( economy_rooms > 0 ) ,
    image_id bigint references image(id) on delete set null on update cascade
);
commit ;
create table if not exists department (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique ,
    description text not null
);
begin ;
create table if not exists filial_department (
    filial_id bigint references filial(id) on delete cascade on update cascade ,
    department_id bigint references department(id) on delete cascade on update cascade ,
    primary key (filial_id, department_id)
);
commit ;

begin ;
create table if not exists position (
    id bigint generated by default as identity unique not null ,
    name varchar not null ,
    description text not null ,
    department_id bigint references department(id) on delete set null on update cascade
);
commit ;

begin ;
create table if not exists employee (
    id bigint generated by default as identity unique not null ,
    name varchar not null ,
    surname varchar not null ,
    patronymic varchar not null ,
    about varchar not null ,
    passport varchar not null ,
    identity_id bigint references identity(id) on delete set null on update cascade ,
    filial_id bigint references filial(id) on delete set null on update cascade ,
    position_id bigint references position(id) on delete set null on update cascade ,
    image_id bigint references image(id) on delete set null on update cascade
);
commit ;

begin ;
create table if not exists room_type (
    id bigint generated by default as identity unique not null ,
    type varchar not null unique
);
commit ;

begin ;
create table if not exists room (
    id bigint generated by default as identity unique not null ,
    number bigint not null check ( number > 0 ),
    room_type_id bigint references room_type(id) on delete set null on update cascade ,
    filial_id bigint references filial(id) on delete cascade on update cascade ,
    description text not null ,
    rented boolean not null ,
    rented_from timestamp check ( rented_from < rented_to ) ,
    rented_to timestamp check ( rented_to > rented_from ) ,
    hour_price bigint not null
);
commit ;

begin ;
create table if not exists room_image (
    room_id bigint references room(id) on delete cascade on update cascade ,
    image_id bigint references image(id) on delete cascade on update cascade
);
commit ;

begin ;
create table if not exists client (
    id bigint generated by default as identity unique not null ,
    name varchar not null ,
    surname varchar not null ,
    patronymic varchar not null ,
    passport varchar not null unique ,
    identity_id bigint references identity(id) on delete set null on update cascade
);
commit ;

begin ;
create table if not exists client_room (
    client_id bigint references client(id) on delete cascade on update cascade ,
    room_id bigint references room(id) on delete cascade on update cascade ,
    primary key (client_id, room_id)
);
commit ;

begin ;
create table if not exists payment (
    id bigint generated by default as identity unique not null ,
    client_id bigint references client(id) on delete cascade on update cascade ,
    filial_id bigint references filial(id) on delete cascade on update cascade ,
    rooms bigint array not null ,
    cost bigint not null default 0,
    closed boolean not null ,
    cancelled boolean not null
);
commit ;