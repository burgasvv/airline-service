
create table if not exists image (
    id bigint generated by default as identity unique not null ,
    name varchar not null ,
    content_type varchar not null ,
    size bigint not null ,
    format varchar not null ,
    data bytea not null
);

create table if not exists authority (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique
);

create table if not exists identity (
    id bigint generated by default as identity unique not null ,
    username varchar not null unique ,
    password varchar not null ,
    email varchar not null unique ,
    phone varchar not null unique ,
    registered_at timestamp not null ,
    enabled boolean not null ,
    authority_id bigint references authority(id) on delete set null on update cascade ,
    image_id bigint references image(id) on delete set null on update cascade
);

create table if not exists country (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique ,
    description text not null
);

create table if not exists city (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique ,
    description text not null ,
    country_id bigint references country(id) on delete cascade on update cascade ,
    capital boolean not null
);

create table if not exists address (
    id bigint generated by default as identity unique not null ,
    city_id bigint references city(id) on delete set null on update cascade ,
    street varchar not null ,
    house varchar not null ,
    apartment varchar
);

create table if not exists status (
    id bigint generated by default as identity unique not null ,
    rating varchar not null unique
);

create table if not exists hotel (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique ,
    status_id bigint references status(id) on delete set null on update cascade ,
    description text not null
);

create table if not exists filial (
    id bigint generated by default as identity unique not null ,
    hotel_id bigint references hotel(id) on delete cascade on update cascade ,
    address_id bigint unique references address(id) on delete set null on update cascade ,
    lux_rooms bigint ,
    economy_rooms bigint
);

create table if not exists department (
    id bigint generated by default as identity unique not null ,
    name varchar not null unique ,
    description text not null
);

create table if not exists filial_department (
    filial_id bigint references filial(id) on delete cascade on update cascade ,
    department_id bigint references department(id) on delete cascade on update cascade ,
    primary key (filial_id, department_id)
);

create table if not exists position (
    id bigint generated by default as identity unique not null ,
    name varchar not null ,
    description text not null ,
    department_id bigint references department(id) on delete set null on update cascade
);

create table if not exists employee (
    id bigint generated by default as identity unique not null ,
    name varchar not null ,
    surname varchar not null ,
    patronymic varchar not null ,
    about varchar not null ,
    passport varchar not null ,
    filial_id bigint references filial(id) on delete set null on update cascade ,
    department_id bigint references department(id) on delete set null on update cascade ,
    position_id bigint references position(id) on delete set null on update cascade
);

create table if not exists room_type (
    id bigint generated by default as identity unique not null ,
    type varchar not null unique
);

create table if not exists room (
    id bigint generated by default as identity unique not null ,
    number bigint not null ,
    room_type_id bigint references room_type(id) on delete set null on update cascade ,
    filial_id bigint references filial(id) on delete cascade on update cascade ,
    description text not null ,
    rented boolean not null ,
    rented_from timestamp not null check ( rented_from < rented_to ) ,
    rented_to timestamp not null check ( rented_to > rented_from )
);

create table if not exists client (
    id bigint generated by default as identity unique not null ,
    name varchar not null ,
    surname varchar not null ,
    patronymic varchar not null ,
    passport varchar not null unique ,
    identity_id bigint references identity(id) on delete set null on update cascade
);

create table if not exists client_room (
    client_id bigint references client(id) on delete cascade on update cascade ,
    room_id bigint references room(id) on delete cascade on update cascade ,
    primary key (client_id, room_id)
);

/* POPULATIONS */

insert into authority(name) values ('ADMIN');
insert into authority(name) values ('EMPLOYEE');
insert into authority(name) values ('CLIENT');

insert into identity(username, password, email, phone, registered_at, enabled, authority_id, image_id)
values ('admin', '$2a$10$JYue8cgXAyLYN2BMJcbyaObGtAe//WbjMKzheVHoImcL3Nz8xq/Ie', 'admin@gmail.com', '(903)-903-4567',
        '2025-03-05 14:00', true, 1, null);

insert into identity(username, password, email, phone, registered_at, enabled, authority_id, image_id)
values ('employee', '$2a$10$QsHJnLexr/b7UkClaQtjJuvzNBAjeIfzX4ZcKVTtmUFxlBc8G9GRy', 'employee@gmail.com', '(913)-913-8901',
        '2025-03-05 14:00', true, 2, null);

insert into identity(username, password, email, phone, registered_at, enabled, authority_id, image_id)
values ('client', '$2a$10$pC9z0BS.nkrrjW8lOeyAhelaQqhSmSO0QBc4JZfnzv.JFTzs322ZO', 'client@gmail.com', '(952)-952-1234',
        '2025-03-05 14:00', true, 3, null);

insert into status(rating) values ('I Звезда');
insert into status(rating) values ('II Звезды');
insert into status(rating) values ('III Звезды');
insert into status(rating) values ('IV Звезды');
insert into status(rating) values ('V Звезд');

insert into country(name, description) values ('Россия', 'Описание страны Российская Федерация');
insert into country(name, description) values ('Китай', 'Описание страны Китайская Народная Демократическая Республика');
insert into country(name, description) values ('США', 'Описание страны Соединенные Штаты Америки');

insert into city(name, description, country_id, capital) values ('Москва','Описание города Москва',1,true);
insert into city(name, description, country_id, capital) values ('Санкт-Петербург','Описание города Санкт-Петербург',1,false);
insert into city(name, description, country_id, capital) values ('Пекин','Описание города Пекин',2,true);
insert into city(name, description, country_id, capital) values ('Шанхай','Описание города Шанхай',2,false);
insert into city(name, description, country_id, capital) values ('Вашингтон','Описание города Вашингтон',3,true);
insert into city(name, description, country_id, capital) values ('Нью-Йорк','Описание города Нью-Йорк',3,false);

insert into hotel(name, status_id, description) values ('Long River',3,'Описание отеля Long River');
insert into hotel(name, status_id, description) values ('Marriot',4,'Описание отеля Marriot');
insert into hotel(name, status_id, description) values ('Golden Field',5,'Описание отеля Golden Fields');

insert into address(city_id, street, house, apartment) values (1,'Величаева','12/3',null);
insert into address(city_id, street, house, apartment) values (1,'Покровская','56а',null);
insert into address(city_id, street, house, apartment) values (2,'Мартышевская','89',null);
insert into address(city_id, street, house, apartment) values (2,'Картаева','34б',null);
insert into address(city_id, street, house, apartment) values (1,'Молчанова','154',null);

insert into filial(hotel_id, address_id, lux_rooms, economy_rooms) values (1,1,10,120);
insert into filial(hotel_id, address_id, lux_rooms, economy_rooms) values (2,2,15,150);
insert into filial(hotel_id, address_id, lux_rooms, economy_rooms) values (1,3,12,130);
insert into filial(hotel_id, address_id, lux_rooms, economy_rooms) values (2,4,17,170);
insert into filial(hotel_id, address_id, lux_rooms, economy_rooms) values (3,5,25,225);

insert into room_type(type) values ('LUX');
insert into room_type(type) values ('ECONOMY');